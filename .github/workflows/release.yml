name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          ## Changes in v${{ steps.get_version.outputs.VERSION }}
          
          See [CHANGELOG.md](https://github.com/the-yaml-life/tyl-graph-port/blob/v${{ steps.get_version.outputs.VERSION }}/CHANGELOG.md) for details.

  test-release:
    name: Test Release Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-release-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --release --all-features

    - name: Build release
      run: cargo build --release --all-features

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [create-release, test-release]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-publish-${{ hashFiles('**/Cargo.lock') }}

    - name: Verify version matches tag
      run: |
        CARGO_VERSION=$(grep '^version =' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
        TAG_VERSION=${{ needs.create-release.outputs.version }}
        if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
          echo "Version mismatch: Cargo.toml has $CARGO_VERSION, tag is $TAG_VERSION"
          exit 1
        fi

    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}

  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [create-release, publish-crate]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build documentation
      run: cargo doc --no-deps --all-features

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/doc
        destination_dir: docs/${{ needs.create-release.outputs.version }}

  notify:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [create-release, publish-crate, update-docs]
    if: always()
    steps:
    - name: Check job statuses
      run: |
        if [ "${{ needs.publish-crate.result }}" != "success" ]; then
          echo "Publish failed"
          exit 1
        fi
        echo "Release v${{ needs.create-release.outputs.version }} completed successfully!"